/**
 * Licensed to Apereo under one or more contributor license
 * agreements. See the NOTICE file distributed with this work
 * for additional information regarding copyright ownership.
 * Apereo licenses this file to you under the Apache License,
 * Version 2.0 (the "License"); you may not use this file
 * except in compliance with the License.  You may obtain a
 * copy of the License at the following location:
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
package org.jasig.portal.api.portlet;

import java.util.List;
import java.util.Map;

import javax.portlet.PortletMode;
import javax.portlet.WindowState;

/**
 * Used to set the state of the delegate and for the basis of URLs generated by the delegate.
 * 
 * @author Eric Dalquist
 * @version $Revision$
 */
public class DelegationRequest {
    private DelegateState delegateState;
    private WindowState parentWindowState;
    private PortletMode parentPortletMode;
    private Map<String, List<String>> parentParameters;
    
    
    public DelegateState getDelegateState() {
        return this.delegateState;
    }
    public void setDelegateState(DelegateState delegateState) {
        this.delegateState = delegateState;
    }
    public WindowState getParentWindowState() {
        return this.parentWindowState;
    }
    public void setParentWindowState(WindowState parentWindowState) {
        this.parentWindowState = parentWindowState;
    }
    public PortletMode getParentPortletMode() {
        return this.parentPortletMode;
    }
    public void setParentPortletMode(PortletMode parentPortletMode) {
        this.parentPortletMode = parentPortletMode;
    }
    public Map<String, List<String>> getParentParameters() {
        return this.parentParameters;
    }
    public void setParentParameters(Map<String, List<String>> parentParameters) {
        this.parentParameters = parentParameters;
    }
    /* (non-Javadoc)
     * @see java.lang.Object#hashCode()
     */
    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.delegateState == null) ? 0 : this.delegateState.hashCode());
        result = prime * result + ((this.parentParameters == null) ? 0 : this.parentParameters.hashCode());
        result = prime * result + ((this.parentPortletMode == null) ? 0 : this.parentPortletMode.hashCode());
        result = prime * result + ((this.parentWindowState == null) ? 0 : this.parentWindowState.hashCode());
        return result;
    }
    /* (non-Javadoc)
     * @see java.lang.Object#equals(java.lang.Object)
     */
    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        DelegationRequest other = (DelegationRequest) obj;
        if (this.delegateState == null) {
            if (other.delegateState != null)
                return false;
        }
        else if (!this.delegateState.equals(other.delegateState))
            return false;
        if (this.parentParameters == null) {
            if (other.parentParameters != null)
                return false;
        }
        else if (!this.parentParameters.equals(other.parentParameters))
            return false;
        if (this.parentPortletMode == null) {
            if (other.parentPortletMode != null)
                return false;
        }
        else if (!this.parentPortletMode.equals(other.parentPortletMode))
            return false;
        if (this.parentWindowState == null) {
            if (other.parentWindowState != null)
                return false;
        }
        else if (!this.parentWindowState.equals(other.parentWindowState))
            return false;
        return true;
    }
    /* (non-Javadoc)
     * @see java.lang.Object#toString()
     */
    @Override
    public String toString() {
        return "DelegationRequest [delegateState=" + this.delegateState + ", parentWindowState="
                + this.parentWindowState + ", parentPortletMode=" + this.parentPortletMode + ", parentParameters="
                + this.parentParameters + "]";
    }
}
