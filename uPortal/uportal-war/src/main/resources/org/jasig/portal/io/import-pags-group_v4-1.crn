<!--

    Licensed to Apereo under one or more contributor license
    agreements. See the NOTICE file distributed with this work
    for additional information regarding copyright ownership.
    Apereo licenses this file to you under the Apache License,
    Version 2.0 (the "License"); you may not use this file
    except in compliance with the License.  You may obtain a
    copy of the License at the following location:

      http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on an
    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied.  See the License for the
    specific language governing permissions and limitations
    under the License.

-->
<!--
| NOTICE:  This file represents a contractual API that is leveraged by more
| than one caller.  Please do not refactor this file in a way that changes
| the number or nature of arguments expected.
|
| These are:
|   - ${Attributes.NODE}=XML Element that defines the entity to import
|   - ${PORTAL_CONTEXT}=uPortal's Spring ApplicationContext
|   - ${SqlAttributes.DATA_SOURCE}=the DataSource for the PortalDb
|   - ${SqlAttributes.TRANSACTION_MANAGER}=PlatformTransactionManager in use
|
+-->
<with>
  <attribute key="personAttributesGroupImportHelper">${groovy(new org.jasig.portal.io.xml.pags.PersonAttributesGroupImportHelper(jpaPersonAttributesGroupDefinitionDao, jpaPersonAttributesGroupTestDefinitionDao, jpaPersonAttributesGroupTestGroupDefinitionDao))}</attribute>
  <attribute key="GROUP_NAME">${valueOf(name)}</attribute>
  <attribute key="GROUP_DESCRIPTION">${valueOf(description)}</attribute><!-- See NOTE on escaped characters below -->
  <subtasks>
    <choose>
      <when test="${jexl(IMPORT_ACTION.equals('GROUP'))}">
        <groovy>
          <script>
            personAttributesGroupImportHelper.addGroup(GROUP_NAME, GROUP_DESCRIPTION);
            personAttributesGroupImportHelper.dropTestGroupsAndTests(GROUP_NAME);
          </script>
        </groovy>
        <node-iterator xpath="selection-test/test-group">
          <with-attribute key="testGroup" value="${groovy(personAttributesGroupImportHelper.addTestGroup(GROUP_NAME))}">
            <node-iterator xpath="test">
              <with>
                <!-- NOTE:  Pulling these values into variables before the groovy script
                     to avoid writing them into the groovy script as String literals,
                     which causes issues with characters that need to be escaped. -->
                <attribute key="attributeName">${valueOf(attribute-name)}</attribute>
                <attribute key="testerClass">${valueOf(tester-class)}</attribute>
                <attribute key="testValue">${valueOf(test-value)}</attribute>
                <subtasks>
                  <groovy>
                    <script>
                      personAttributesGroupImportHelper.addTest(testGroup, attributeName, testerClass, testValue);
                    </script>
                  </groovy>
                </subtasks>
              </with>
            </node-iterator>
          </with-attribute>
        </node-iterator>
      </when>
      <when test="${jexl(IMPORT_ACTION.equals('MEMBERS'))}">
        <groovy>
          <script>
            personAttributesGroupImportHelper.dropGroupMembers(GROUP_NAME);
          </script>
        </groovy>
        <node-iterator xpath="members/member-name">
          <with-attribute key="MEMBER_NAME" value="${valueOf(.)}"><!-- See NOTE on escaped characters above -->
            <groovy>
              <script>
                personAttributesGroupImportHelper.addGroupMember(GROUP_NAME, MEMBER_NAME);
              </script>
            </groovy>
          </with-attribute>
        </node-iterator>
      </when>
    </choose>
  </subtasks>
</with>
