<!--

    Licensed to Apereo under one or more contributor license
    agreements. See the NOTICE file distributed with this work
    for additional information regarding copyright ownership.
    Apereo licenses this file to you under the Apache License,
    Version 2.0 (the "License"); you may not use this file
    except in compliance with the License.  You may obtain a
    copy of the License at the following location:

      http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on an
    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied.  See the License for the
    specific language governing permissions and limitations
    under the License.

-->
<project name="uPortal Packaging" basedir="." xmlns:artifact="urn:maven-artifact-ant">
    <property name="uportal.source.dir" value="${basedir}/.." />

    <import file="${uportal.source.dir}/bootstrap/build_includes.xml" />
	
    <condition property="environment.token" value="${env}">
        <isset property="env" />
    </condition>
    <property name="environment.token" value="local" />
	
    <fail message="filters/${environment.token}.properties does not exist, please copy local.properties and fill in your settings.">
        <condition>
        	<or>
                <not>
                    <available file="${basedir}/filters/${environment.token}.properties" />
                </not>
                <not>
                    <available file="${basedir}/../filters/${environment.token}.properties" />
                </not>
    		</or>
        </condition>
    </fail>

	<property file="${basedir}/../filters/${environment.token}.properties" />
	<property file="${basedir}/filters/${environment.token}.properties" />
    <property file="${basedir}/build.properties" />
    <property name="target.dir" value="${basedir}/target" />
    <property name="download.dir" value="${target.dir}/downloads" />

    <artifact:pom file="${uportal.source.dir}/pom.xml" id="uportal-parent.pom" />
    <property name="uportal.name" value="uPortal" />
    <property name="uportal.version" value="${uportal-parent.pom.version}" />
    <property name="uportal.finalName" value="${uportal.name}-${uportal.version}" />

    <fileset id="sourceFilesSvn" dir="${uportal.source.dir}" defaultexcludes="false">
        <exclude name="build.properties" />
        <exclude name="data/**" />
        <exclude name="target/**" />
        <exclude name="*/target/**" />
        <exclude name="*/*/target/**" />
    </fileset>
    <fileset id="sourceFiles" dir="${uportal.source.dir}" defaultexcludes="true">
        <exclude name="build.properties" />
        <exclude name="data/**" />
        <exclude name="target/**" />
        <exclude name="*/target/**" />
        <exclude name="*/*/target/**" />
    </fileset>
    
    <target name="all" description="Generates all assemblies by running clean, source, and quickstart">
        <antcall target="clean" />
        <antcall target="prepare-deploy" />
    </target>

    <target name="clean" depends="prepare-qs" description="Remove files used in packaging and generated packages and runs 'mvn clean' on the uPortal project.">
    	<property name="uportal.dir" value="${quickstart.dir}/${uportal.finalName}" />
    	<echo>${uportal.dir}/build.xml</echo>
    	<if>
            <available file="${uportal.dir}/build.xml" />
    		<then>
                <ant target="hsql-shutdown" antfile="${uportal.dir}/build.xml" dir="${uportal.dir}">
                    <property name="env" value="${environment.token}"/>
                </ant>
			</then>
		</if>
    	
        <delete dir="${target.dir}" />

        <ant target="mvn" antfile="${uportal.source.dir}/build.xml" dir="${uportal.source.dir}">
            <property name="pomDir" value="${uportal.source.dir}" />
            <property name="goal" value="clean" />
        </ant>
    </target>

    <target name="source" depends="prepare" description="Exports and packages a buildable source distribution of the project">
        <property name="source.dir" value="${target.dir}/${uportal.finalName}" />
        <property name="source.file.tar.gz" value="${target.dir}/${uportal.finalName}.tar.gz" />
        
        <!-- copy uPortal source export into quickstart folder -->
        <mkdir dir="${source.dir}" />
        <copy todir="${source.dir}" preservelastmodified="true">
            <fileset refid="sourceFiles" />
        </copy>
        
        <!-- Update the uPortal release notes --> 
        <copy file="${uportal.source.dir}/releaseNotes.html" tofile="${source.dir}/releaseNotes.html" overwrite="true">
            <filterset begintoken="$${" endtoken="}">
                <filter token="uportal.version" value="${uportal.version}" />
            </filterset>
        </copy>

        <!-- tar.gz source distribution -->
        <tar destfile="${source.file.tar.gz}" longfile="gnu" compression="gzip">
            <tarfileset prefix="${uportal.finalName}" dir="${source.dir}" />
        </tar>
        <checksum file="${source.file.tar.gz}" algorithm="md5" />
        <checksum file="${source.file.tar.gz}" algorithm="sha1" />
    </target>
    
    <target name="quickstart" depends="prepare-qs, prepare-qs-tomcat, prepare-qs-ant, prepare-qs-maven, prepare-qs-uportal" description="Generates the quick start distribution">
        <copy todir="${quickstart.dir}" overwrite="true">
            <filterset>
                <filter token="ant.name" value="${dl.ant.finalName}" />
                <filter token="maven.name" value="${dl.maven.finalName}" />
                <filter token="tomcat.name" value="${dl.tomcat.finalName}" />
                <filter token="uportal.name" value="${uportal.finalName}" />

                <filter token="ant.version" value="${dl.ant.version}" />
                <filter token="maven.version" value="${dl.maven.version}" />
                <filter token="tomcat.version" value="${dl.tomcat.version}" />
                <filter token="uportal.version" value="${uportal.version}" />

                <filter token="quickstart.name" value="${quickstart.name}" />

                <filter token="environment.qs.tomcat.port.shutdown" value="${environment.qs.tomcat.port.shutdown}" />
            	<filter token="environment.qs.tomcat.port.http" value="${environment.qs.tomcat.port.http}" />
            	<filter token="environment.qs.tomcat.port.ajp" value="${environment.qs.tomcat.port.ajp}" />
            	<filter token="environment.build.uportal.context" value="${environment.build.uportal.context}" />
            	<filter token="environment" value="${environment.token}" />
            </filterset>

            <fileset dir="${basedir}/quickstart" />
        </copy>
        
        <chmod perm="755" dir="${quickstart.dir}" includes="*.sh" verbose="true" />
        
        <if>
            <not>
                <equals arg1="${nopackage}" arg2="true" />
            </not>
            <then>
                <antcall target="qs-package">
                    <param name="qs-file-ext" value="" />
                </antcall>
            </then>
        </if>
    </target>
    
    <target name="prepare-deploy" depends="source, quickstart" description="Prepare the generated source and quickstart files for deployment to the Jasig download server">
        <property name="deploy.dir" value="${target.dir}/deploy/${uportal.finalName}" />
        
        <mkdir dir="${deploy.dir}" />
        
        <copy todir="${deploy.dir}">
            <fileset dir="${target.dir}" defaultexcludes="false">
                <exclude name="${uportal.finalName}" />
                <include name="${uportal.finalName}*.*" />
            </fileset>
        </copy>
    </target>
	
	<target name="live-nightly-setup" depends="prepare-qs" description="Setup live-nightly symlinks">
		<!-- add logging symlink -->
		<echo>Creating symlink from /var/log/apache2/tomcat/${tomcat.loglink} to ${quickstart.dir}/${dl.tomcat.finalName}/logs</echo>
	    <symlink link="/var/log/apache2/tomcat/${tomcat.loglink}" resource="${quickstart.dir}/${dl.tomcat.finalName}/logs" overwrite="true"/>
	</target>
    
    <target name="live-nightly-stop" depends="prepare-qs">
        <if>
            <available file="${quickstart.dir}/build.xml" />
            <then>
                <ant antfile="${quickstart.dir}/build.xml" dir="${quickstart.dir}" inheritall="false" target="stop" />
                <sleep minutes="1" />
            </then>
        </if>
    </target>
    
    <target name="live-nightly-start" depends="prepare-qs">
        <ant antfile="${quickstart.dir}/build.xml" dir="${quickstart.dir}" inheritall="false" target="start" />
    </target>
            
    <target name="qs-package" depends="prepare-qs">
        <property name="quickstart.file_base" value="${target.dir}/${quickstart.name}${qs-file-ext}" />
        <property name="quickstart.file.tar.gz" value="${quickstart.file_base}.tar.gz" />
        
        <!-- tar.gz distribution -->
        <tar destfile="${quickstart.file.tar.gz}" longfile="gnu" compression="gzip">
            <tarfileset prefix="${quickstart.name}" dir="${quickstart.dir}">
                <exclude name="**/*.sh" />
                <exclude name="${dl.ant.finalName}/bin/*" />
                <exclude name="${dl.maven.finalName}/bin/*" />
                <exclude name="${dl.tomcat.finalName}/bin/*" />
            </tarfileset>
            <tarfileset prefix="${quickstart.name}" dir="${quickstart.dir}" mode="755">
                <include name="**/*.sh" />
                <include name="${dl.ant.finalName}/bin/*" />
                <include name="${dl.maven.finalName}/bin/*" />
                <include name="${dl.tomcat.finalName}/bin/*" />
            </tarfileset>
        </tar>
        <checksum file="${quickstart.file.tar.gz}" algorithm="md5" />
        <checksum file="${quickstart.file.tar.gz}" algorithm="sha1" />
    </target>

    <target name="prepare-qs-tomcat" depends="prepare-qs">
        <download-extract download.name="tomcat" download.dir="${download.dir}" extract.dir="${quickstart.dir}" />

        <!--
         | Update server.xml
         +-->
        <replace file="${dl.tomcat.dir}/conf/server.xml" summary="true">
        	<!-- Set the HTTP port, listen only on localhost, and enable empty session path -->
        	<replacefilter>
        	    <replacetoken><![CDATA[<Connector port="8080" protocol="HTTP/1.1"]]></replacetoken> 
        	    <replacevalue expandProperties="true"><![CDATA[<Connector emptySessionPath="true" address="localhost" port="${environment.qs.tomcat.port.http}" protocol="HTTP/1.1"]]></replacevalue>
        	</replacefilter>
        	
        	<!-- Set the AJP port, listen only on localhost, and enable empty session path -->
            <replacefilter>
                <replacetoken><![CDATA[<Connector port="8009" protocol="AJP/1.3" redirectPort="8443" />]]></replacetoken> 
                <replacevalue expandProperties="true"><![CDATA[<Connector emptySessionPath="true" port="${environment.qs.tomcat.port.ajp}" protocol="AJP/1.3" redirectPort="8443" />]]></replacevalue>
            </replacefilter>
            
            <!-- Set the shutdown -->
            <replacefilter>
                <replacetoken><![CDATA[<Server port="8005" shutdown="SHUTDOWN">]]></replacetoken> 
                <replacevalue expandProperties="true"><![CDATA[<Server port="${environment.qs.tomcat.port.shutdown}" shutdown="SHUTDOWN">]]></replacevalue>
            </replacefilter>
        </replace>
        
        <!-- update catalina.properties tp emable shared/lib classloader -->
        <replace file="${dl.tomcat.dir}/conf/catalina.properties" summary="true">
            <replacefilter>
                <replacetoken>shared.loader=</replacetoken> 
                <replacevalue expandProperties="true">shared.loader=${catalina.base}/shared/classes,${catalina.base}/shared/lib/*.jar</replacevalue>
            </replacefilter>
        </replace>
        
        <!-- remove all pre-packaged webapps -->
        <delete includeemptydirs="true">  
            <fileset dir="${dl.tomcat.dir}/webapps/" includes="**/*"/>  
        </delete>
    </target>

    <target name="prepare-qs-ant" depends="prepare-qs" unless="no-bundled-ant">
        <download-extract download.name="ant" download.dir="${download.dir}" extract.dir="${quickstart.dir}" />
    </target>

    <target name="prepare-qs-maven" depends="prepare-qs" unless="no-bundled-maven">
        <download-extract download.name="maven" download.dir="${download.dir}" extract.dir="${quickstart.dir}" />
    </target>

    <target name="prepare-qs-uportal" depends="prepare-qs">
        <property name="uportal.dir" value="${quickstart.dir}/${uportal.finalName}" />

        <!-- copy uPortal source export into quickstart folder -->
        <mkdir dir="${uportal.dir}" />
        <copy todir="${uportal.dir}" preservelastmodified="true">
            <fileset refid="sourceFilesSvn" />
        </copy>

        <!-- create uPortal build.properties pointing to quickstart tomcat -->
        <copy file="${uportal.dir}/build.properties.sample" tofile="${uportal.dir}/build.properties" overwrite="true">
            <filterset>
                <filter token="server.home" value="$${basedir}/../${dl.tomcat.finalName}" />
            </filterset>
        </copy>
    	
    	<if>
    		<not>
    	        <isset property="no-bundled-maven"/>
    		</not>
    		<then>
            	<echo>Setting maven.home to: $${basedir}/../${dl.maven.finalName}</echo>
                <replace file="${uportal.dir}/build.properties" token="#maven.home=" value="maven.home=$${basedir}/../${dl.maven.finalName}" summary="true" />
    		</then>
    	</if>
    	
    	<!-- Set the docbase for the deployment -->
    	<echo>Setting uPortal docbase to: ${environment.qs.uportal.docbase}</echo>
    	<replace file="${uportal.dir}/pom.xml" summary="true">
            <replacefilter>
                <replacetoken><![CDATA[<uportal.docbase>uPortal</uportal.docbase>]]></replacetoken> 
                <replacevalue expandProperties="true"><![CDATA[<uportal.docbase>${environment.qs.uportal.docbase}</uportal.docbase>]]></replacevalue>
            </replacefilter>
        </replace>
        
        <!-- Update the uPortal release notes --> 
        <copy file="${uportal.source.dir}/releaseNotes.html" tofile="${uportal.dir}/releaseNotes.html" overwrite="true">
            <filterset begintoken="$${" endtoken="}">
                <filter token="project.version" value="${uportal.version}" />
            </filterset>
        </copy>
        
        <!-- Ensure a HSQL isntance isn't already running -->
        <ant target="hsql-shutdown" antfile="${uportal.dir}/build.xml" dir="${uportal.dir}">
            <property name="env" value="${environment.token}"/>
        </ant>
            
        <!-- start quickstart hsql isntance -->
        <ant target="hsql" antfile="${uportal.dir}/build.xml" dir="${uportal.dir}">
        	<property name="env" value="${environment.token}"/>
        	<property name="spawn" value="true" />
        </ant>

        <!-- run initportal to setup tomcat & database -->
        <ant target="initportal" antfile="${uportal.dir}/build.xml" dir="${uportal.dir}">
            <property name="env" value="${environment.token}"/>
        </ant>

        <!-- shutdown hsql nicely -->
        <ant target="hsql-shutdown" antfile="${uportal.dir}/build.xml" dir="${uportal.dir}">
            <property name="env" value="${environment.token}"/>
        </ant>

        <!-- clean up maven build files, these don't need to be packaged up -->
        <ant target="mvn" antfile="${uportal.dir}/build.xml" dir="${uportal.dir}">
            <property name="pomDir" value="${uportal.dir}" />
            <property name="goal" value="clean" />
        </ant>
    </target>

    <!--
     | Expects the following properties to be available:
     |      dl.@{download.name}.file     - final name of the file to download. ex: apache-ant-1.6.5-bin.tar.bz2
     |      dl.@{download.name}.finalName     - name and version of the value to download. ex: apache-ant-1.6.5
     |      dl.@{download.name}.url      - full URL to download file from.
     |      dl.@{download.name}.format   - compression format of file. 'tar.gz' and 'tar.bz2' are currently supported.
     |
     | The following properties are generated and can be used later.
     |      dl.@{download.name}.localFile   - full path and name of the downloaded file
     |      dl.@{download.name}.dir         - Full path and name of the directory the archive is extracted to.
     +-->
    <macrodef name="download-extract">
        <attribute name="download.name" description="The name to substitute into properties to download the file" />
        <attribute name="download.dir" default="${java.io.tmpdir}" description="Directory to download the archive to" />
        <attribute name="extract.dir" description="directory to extract the archive to" />

        <sequential>
            <!-- generated properties for the download/extract -->
            <property name="dl.@{download.name}.localFile" value="@{download.dir}/${dl.@{download.name}.file}" />
            <property name="dl.@{download.name}.dir" value="@{extract.dir}/${dl.@{download.name}.finalName}" />

            <!-- download -->
            <mkdir dir="@{download.dir}" />
            <get src="${dl.@{download.name}.url}" dest="${dl.@{download.name}.localFile}" usetimestamp="true" verbose="true" />

            <!-- extract -->
            <condition property="@{download.name}.compression" value="gzip">
                <equals arg1="${dl.@{download.name}.format}" arg2="tar.gz" />
            </condition>
            <property name="@{download.name}.compression" value="bzip2" />

            <mkdir dir="@{extract.dir}" />
            <untar src="${dl.@{download.name}.localFile}" dest="@{extract.dir}" compression="${@{download.name}.compression}" />

            <!-- update permissions -->
            <chmod perm="755" dir="${dl.@{download.name}.dir}/bin" includes="*" verbose="true" />
        </sequential>
    </macrodef>


    <target name="prepare">
        <mkdir dir="${target.dir}" />
        
        <if>
            <not>
                <available file="${uportal.source.dir}/build.properties" />
            </not>
            <then>
                <copy file="${uportal.source.dir}/build.properties.sample" tofile="${uportal.source.dir}/build.properties" />
            </then>
        </if>
    </target>

    <target name="prepare-qs" depends="prepare">
        <property name="quickstart.name" value="${uportal.finalName}-quick-start" />
        <property name="quickstart.dir" value="${target.dir}/${quickstart.name}" />

        <mkdir dir="${quickstart.dir}" />
    </target>
</project>