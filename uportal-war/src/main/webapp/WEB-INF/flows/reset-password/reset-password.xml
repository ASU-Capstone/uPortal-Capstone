<?xml version="1.0" encoding="UTF-8"?>
<!--

    Licensed to Apereo under one or more contributor license
    agreements. See the NOTICE file distributed with this work
    for additional information regarding copyright ownership.
    Apereo licenses this file to you under the Apache License,
    Version 2.0 (the "License"); you may not use this file
    except in compliance with the License.  You may obtain a
    copy of the License at the following location:

      http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on an
    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied.  See the License for the
    specific language governing permissions and limitations
    under the License.

-->
<flow xmlns="http://www.springframework.org/schema/webflow" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/webflow
                          http://www.springframework.org/schema/webflow/spring-webflow-2.0.xsd">

    <on-start>
        <!-- try the username and login token pair submitted in the url -->
        <set name="flowScope.username" value="requestParameters.username"/>
        <set name="flowScope.loginToken" value="requestParameters.loginToken"/>
    </on-start>

    <action-state id="validateToken">
        <!-- if the pair is valid, allow the user to create a new account -->
        <evaluate expression="userAccountHelper.validateLoginToken(username, loginToken)" result="flashScope.isValid" />

        <transition on="#{isValid}" to="createPassword">
            <set name="flowScope.accountForm" value="userAccountHelper.getForm(username)"/>
        </transition>

        <!-- if the URL doesn't represent a valid account and login token pair -->
        <transition to="invalidLoginToken"/>
    </action-state>

    <!-- New password form -->
    <view-state id="createPassword" model="accountForm">
        <!-- On successful form submission, update the user account with the new password -->
        <transition on="updatePassword" to="createPasswordSuccess">
            <evaluate expression="userAccountHelper.createPassword(accountForm, loginToken)"/>
        </transition>
        <!-- On error, go back to the set password form -->
        <transition on-exception="java.lang.Exception" to="createPassword">
            <set name="flowScope.createPasswordError" value="true"/>
        </transition>
    </view-state>

    <!--
        Invalid login token view
    -->
    <view-state id="invalidLoginToken">
        <transition on="newToken" to="newToken"/>
    </view-state>

    <subflow-state id="newToken" subflow="forgot-password">
        <transition to="finish"/>
    </subflow-state>

    <!-- Modify the user account with the new password and store the account -->
    <view-state id="createPasswordSuccess">
        <transition on="login" to="login"/>
    </view-state>

    <subflow-state id="login" subflow="local-login">
        <transition to="finish"/>
    </subflow-state>

    <end-state id="finish"/>

</flow>
