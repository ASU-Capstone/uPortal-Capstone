<?xml version="1.0" encoding="UTF-8"?>
<!--

    Licensed to Apereo under one or more contributor license
    agreements. See the NOTICE file distributed with this work
    for additional information regarding copyright ownership.
    Apereo licenses this file to you under the Apache License,
    Version 2.0 (the "License"); you may not use this file
    except in compliance with the License.  You may obtain a
    copy of the License at the following location:

      http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on an
    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied.  See the License for the
    specific language governing permissions and limitations
    under the License.

-->
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns="http://www.springframework.org/schema/beans" 
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="
           http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
           http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd">
           
    <bean id="minimizedStateHandlerInterceptor" class="org.jasig.portal.portlets.MinimizedStateHandlerInterceptor" />           

    <bean id="requireValidSessionFilter" class="org.jasig.portal.url.RequireValidSessionFilter" />
    <bean id="urlCanonicalizingFilter" class="org.jasig.portal.url.UrlCanonicalizingFilter" />
    <bean id="createPortletCookieFilter" class="org.jasig.portal.utils.web.CreatePortletCookieFilter"/>

    <bean id="remoteCookieCheckFilter" class="org.jasig.portal.utils.web.RemoteCookieCheckFilter">
        <property name="regexIgnoredUserAgents">
            <set>
                <value>.*Googlebot.*</value>  <!-- Allow Google to index the guest page.  See https://support.google.com/webmasters/answer/1061943?hl=en -->
            </set>
        </property>
    </bean>
    <bean id="multipartResolver"
        class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
    
        <!-- one of the properties available; the maximum file size in bytes -->
        <property name="maxUploadSize" value="100000"/>
    </bean>

    <!-- The urlCanonicalizingFilter can (will) attempt to deep-link users, 
         through authentication, to the content they are requesting, provided 
         that...
           - (1) the user is a guest
           - (2) the canonicalUrl (place the portal wants to send the user) is 
                 not the requested content
           - (3) there is a strategy for external login (LoginRefUrlEncoder 
                 bean) configured
    -->
    <bean id="casRefUrlEncoder" class="org.jasig.portal.url.CasLoginRefUrlEncoder"
        p:casLoginUrl="${org.jasig.portal.channels.CLogin.CasLoginUrl}" />

    <!--
     | Message source for this context, loaded from localized "messages_xx" files
     +-->
    <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="parentMessageSource">
          <bean class="org.jasig.portal.i18n.DatabaseMessageSource" />
        </property>
        <property name="alwaysUseMessageFormat" value="true" /> <!-- See http://blog.pfa-labs.com/2010/07/infamous-dissapearing-single-quote-in.html -->
        <property name="cacheSeconds" value="60" />
        <property name="useCodeAsDefaultMessage" value="true" />
        <property name="fallbackToSystemLocale" value="false" />
        <property name="basenames">
            <list>
                <value>classpath:/properties/i18n/Messages</value>
                <value>/WEB-INF/flows/person-lookup/person-lookup</value>
                <value>/WEB-INF/flows/register-portal/register-portal</value>
            </list>
        </property>                                     
    </bean>

    <bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
        <property name="order" value="0"/>
        <property name="defaultViews">
            <list>
                <bean
                    class="org.springframework.web.servlet.view.json.MappingJackson2JsonView" />
                <bean class="org.springframework.web.servlet.view.xml.MarshallingView">
                    <constructor-arg>
                        <bean class="org.springframework.oxm.xstream.XStreamMarshaller" />
                    </constructor-arg>
                </bean>
            </list>
        </property>
        <property name="contentNegotiationManager">
            <bean class="org.springframework.web.accept.ContentNegotiationManager">
                <constructor-arg>
                    <bean class="org.springframework.web.accept.PathExtensionContentNegotiationStrategy">
                        <constructor-arg>
                            <map>
                                <entry key="json" value="application/json"/>
                            </map>
                        </constructor-arg>
                    </bean>
                </constructor-arg>
            </bean>
        </property>
    </bean>
  
    <!-- 
     | XML view resolver for JSON view
     +-->
    <bean id="xmlViewResolver" class="org.springframework.web.servlet.view.XmlViewResolver">
        <property name="order" value="1"/>
        <property name="location" value="classpath:properties/contexts/views/mvcViews.xml"/>
    </bean>
    
    <!-- 
     | Standard JSP view resolver
     +-->
    <bean id="jspViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="cache" value="true"/>
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/WEB-INF/"/>
        <property name="suffix" value=".jsp"/>
        <property name="order" value="2"/>
    </bean>
    
    <bean id="localeResolver" class="org.jasig.portal.i18n.LocaleManagerLocaleResolver" />
</beans>