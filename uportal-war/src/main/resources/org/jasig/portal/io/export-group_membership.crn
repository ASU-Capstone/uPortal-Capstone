<!--

    Licensed to Apereo under one or more contributor license
    agreements. See the NOTICE file distributed with this work
    for additional information regarding copyright ownership.
    Apereo licenses this file to you under the Apache License,
    Version 2.0 (the "License"); you may not use this file
    except in compliance with the License.  You may obtain a
    copy of the License at the following location:

      http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on an
    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied.  See the License for the
    specific language governing permissions and limitations
    under the License.

-->
<with-attribute key="Attributes.NODE" value="${newDoc(group)}">
    <sql-query>
        <sql>
            SELECT UPG.*, UPET.ENTITY_TYPE_NAME
            FROM UP_GROUP UPG
                LEFT JOIN UP_ENTITY_TYPE UPET ON UPG.ENTITY_TYPE_ID = UPET.ENTITY_TYPE_ID
            WHERE UPG.GROUP_NAME = ?
        </sql>
        <parameter value="${GROUP_NAME}"/>
        <subtasks>
    <append-node node="${attributeNode(script=classpath://org/jasig/portal/io/import-group_membership_v3-2.crn)}"/>

    <append-node>
        <name>${GROUP_NAME}</name>
        <entity-type>${ENTITY_TYPE_NAME}</entity-type>
        <creator>${CREATOR_ID}</creator>
        <description>${DESCRIPTION}</description>
        <children/>
    </append-node>
    
    <sql-query>
        <sql>
            SELECT UPGM.MEMBER_SERVICE, UPGM.MEMBER_KEY, UPGM.MEMBER_IS_GROUP, UPG.GROUP_NAME
            FROM UP_GROUP_MEMBERSHIP UPGM
                left join UP_GROUP UPG ON UPGM.MEMBER_IS_GROUP = 'T' AND UPGM.MEMBER_KEY = UPG.GROUP_ID
            WHERE UPGM.GROUP_ID = ?
            ORDER BY UPG.GROUP_NAME, UPGM.MEMBER_SERVICE, UPGM.MEMBER_KEY
        </sql>
        <parameter value="${GROUP_ID}"/>
        <subtasks>
            <choose>
                <when test="${jexl(MEMBER_IS_GROUP.equals('T'))}">
                    <with-attribute key="GROUP" value="${groovy(org.jasig.portal.services.GroupService.findGroup(MEMBER_SERVICE + '.' + MEMBER_KEY))}">
                        <!-- Check for group name == null (indicates an orphaned record) -->
                        <choose>
                            <when test="${jexl(GROUP.getName() == null)}">
                                <log logger-name="org.jasig.portal.io.export-group_membership" level="warn">Membership child references a deleted group;  removing orphaned reference.</log>
                            </when>
                            <otherwise>
                                <!-- All is well... -->
                                <append-node parent="${singleNode(children)}">
                                    <group>${jexl(GROUP.getName())}</group>
                                </append-node>
                            </otherwise>
                        </choose>
                    </with-attribute>
                </when>
                <when test="${jexl(ENTITY_TYPE_NAME.equals('org.jasig.portal.security.IPerson'))}">
                    <with-attribute key="USER_NAME" value="${MEMBER_KEY}">
                        <choose>
                            <when test="${groovy(isUserIncluded.apply(USER_NAME))}">
                                <append-node parent="${singleNode(children)}">
                                    <literal>${USER_NAME}</literal>
                                </append-node>
                            </when>
                            <otherwise>
                                <log logger-name="org.jasig.portal.io.export-group_membership" level="warn">user, ${USER_NAME}: Not on included user list, skipping membership export</log>
                                <append-node node="${attributeNode(cancel=true)}"/>
                            </otherwise>
                        </choose>
                    </with-attribute>
                </when>
                <when test="${jexl(!ENTITY_TYPE_NAME.equals('org.jasig.portal.portlet.om.IPortletDefinition'))}">
                    <!-- Ignore channels, their group membership information is handled by the chanpub files -->
                    <append-node parent="${singleNode(children)}">
                        <literal>${MEMBER_KEY}</literal>
                    </append-node>
                </when>
            </choose>
        </subtasks>
    </sql-query>
    
    <return value="${Attributes.NODE}"/>
        </subtasks>
    </sql-query>
</with-attribute>
