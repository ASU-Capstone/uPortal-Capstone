<!--

    Licensed to Apereo under one or more contributor license
    agreements. See the NOTICE file distributed with this work
    for additional information regarding copyright ownership.
    Apereo licenses this file to you under the Apache License,
    Version 2.0 (the "License"); you may not use this file
    except in compliance with the License.  You may obtain a
    copy of the License at the following location:

      http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on an
    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied.  See the License for the
    specific language governing permissions and limitations
    under the License.

-->
<!--
 | NOTICE:  This file represents a contractual API that is leveraged by more 
 | than one caller.  Please do not refactor this file in a way that changes 
 | the number or nature of arguments expected.
 |
 | These are:
 |   - ${NAME}=the identifier of the entity to export
 |   - ${PORTAL_CONTEXT}=uPortal's Spring ApplicationContext
 |   - ${SqlAttributes.DATA_SOURCE}=the DataSource for the PortalDb
 |   - ${SqlAttributes.TRANSACTION_MANAGER}=PlatformTransactionManager in use
 |
 +-->
<with>
    <attribute key="Attributes.NODE">${newDoc(fragment-definition)}</attribute>
    <subtasks>
        <echo-ln>Export Fragment Definition:  NAME=${NAME}</echo-ln>        
        <with-attribute key="fragment" value="${groovy(fragmentDefinitionDao.getFragmentDefinition(NAME))}">
            <choose>
                <when test="${jexl(fragment == null)}">
                    <echo-ln>WARNING:  Fragment Definition '${NAME}' does not exist;  no file will be generated.</echo-ln>
                    <log logger-name="org.jasig.portal.io.export-fragment-definition" level="warn">Fragment Definition '${NAME}' does not exist;  no file will be generated.</log>
                </when>
                <otherwise>
                    <append-node node="${attributeNode(script=classpath://org/jasig/portal/io/import-fragment-definition_v3-1.crn)}"/>
                    <append-node node="${groovy(org.jasig.portal.layout.dlm.FragmentDefinition.NAMESPACE)}"/>
                    <groovy>
                        <script>fragment.toElement(Attributes.NODE)</script>
                    </groovy>
                    <return value="${Attributes.NODE}"/>
                </otherwise>
            </choose>
        </with-attribute>
    </subtasks>
</with>
