<!--

    Licensed to Apereo under one or more contributor license
    agreements. See the NOTICE file distributed with this work
    for additional information regarding copyright ownership.
    Apereo licenses this file to you under the Apache License,
    Version 2.0 (the "License"); you may not use this file
    except in compliance with the License.  You may obtain a
    copy of the License at the following location:

      http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on an
    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied.  See the License for the
    specific language governing permissions and limitations
    under the License.

-->
<!--
 | NOTICE:  This file represents a contractual API that is leveraged by more 
 | than one caller.  Please do not refactor this file in a way that changes 
 | the number or nature of arguments expected.
 |
 | These are:
 |   - ${USER_NAME}=the identifier of the entity to export
 |   - ${PROFILE_FNAME}=the functional name of the profile to export
 +-->
<with-attribute key="PROFILE_KEY_PARTS" value="${groovy(new HashMap())}">
    <groovy>
        <script>
            keyParts = PROFILE_KEY.split("\\|");
            PROFILE_KEY_PARTS.put("USER_NAME", keyParts[0]);
            PROFILE_KEY_PARTS.put("PROFILE_FNAME", keyParts[1]);
        </script>
        <subtasks>
            <with>
                <attribute key="USER_NAME">${groovy(PROFILE_KEY_PARTS.get('USER_NAME'))}</attribute>
                <attribute key="PROFILE_FNAME">${groovy(PROFILE_KEY_PARTS.get('PROFILE_FNAME'))}</attribute>
                <subtasks>
                    <with>
                        <attribute key="Attributes.NODE">${newDoc(profile)}</attribute>
                        <attribute key="USER_ID">${sql(SELECT user_id FROM up_user WHERE user_name = '${USER_NAME}')}</attribute>
                        <subtasks>
                            <append-node node="${attributeNode(script=classpath://org/jasig/portal/io/import-profile_v3-2.crn)}"/>
                            <append-node node="${attributeNode(username=${USER_NAME})}"/>
                            <sql-query>
                                <sql>
                                    SELECT *
                                    FROM up_user_profile
                                    WHERE USER_ID = ? AND profile_fname = ?
                                </sql>
                                <parameter value="${USER_ID}"/>
                                <parameter value="${PROFILE_FNAME}"/>
                                <subtasks>
                                    <with>
                                        <attribute key="structureStylesheetDesc">${groovy(stylesheetDescriptorDao.getStylesheetDescriptor(STRUCTURE_SS_ID))}</attribute>
                                        <attribute key="themeStylesheetDesc">${groovy(stylesheetDescriptorDao.getStylesheetDescriptor(THEME_SS_ID))}</attribute>
                                        <subtasks>
                                            <append-node>
                                                <name>${PROFILE_NAME}</name>
                                                <fname>${PROFILE_FNAME}</fname>  
                                                <description>${DESCRIPTION}</description>  
                                                <structure name="${groovy(structureStylesheetDesc.getName())}"/>  
                                                <theme name="${groovy(themeStylesheetDesc.getName())}"/> 
                                            </append-node>
                                            <with>
                                                <attribute key="structureStylesheetPrefs">${groovy(stylesheetUserPreferencesDao.getStylesheetUserPreferences(structureStylesheetDesc, USER_ID, PROFILE_ID))}</attribute>
                                                <attribute key="themeStylesheetPrefs">${groovy(stylesheetUserPreferencesDao.getStylesheetUserPreferences(themeStylesheetDesc, USER_ID, PROFILE_ID))}</attribute>
                                                <subtasks>
                                                    <if test="${groovy(structureStylesheetPrefs != null)}">
                                                        <for-each attribute-name="paramEntry" items="${groovy(structureStylesheetPrefs.populateStylesheetParameters(new org.jasig.portal.utils.MapPopulator()).getMap().entrySet())}">
                                                            <append-node parent="${singleNode(structure)}">
                                                                <parameter>
                                                                    <name>${groovy(paramEntry.getKey())}</name>
                                                                    <value>${groovy(paramEntry.getValue())}</value>
                                                                </parameter>
                                                            </append-node> 
                                                        </for-each>
                                                    </if>
                                                    <if test="${groovy(themeStylesheetPrefs != null)}">
                                                        <for-each attribute-name="paramEntry" items="${groovy(themeStylesheetPrefs.populateStylesheetParameters(new java.util.LinkedHashMap()).entrySet())}">
                                                            <append-node parent="${singleNode(theme)}">
                                                                <parameter>
                                                                    <name>${groovy(paramEntry.getKey())}</name>
                                                                    <value>${groovy(paramEntry.getValue())}</value>
                                                                </parameter>
                                                            </append-node> 
                                                        </for-each>
                                                    </if>
                                                </subtasks>
                                            </with>
                                            <return value="${Attributes.NODE}"/>
                                        </subtasks>
                                    </with>
                                </subtasks>
                            </sql-query>
                        </subtasks>
                    </with>
                </subtasks>
            </with>
        </subtasks>
    </groovy>
</with-attribute>
